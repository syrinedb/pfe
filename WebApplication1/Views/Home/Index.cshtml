@using Newtonsoft.Json
@{
    ViewData["Title"] = "Weather Details";   
}
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
    }

    .container {
        max-width: 1800px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        display: block;
        margin-bottom: 5px;
    }

    input[type="text"],
    input[type="number"],
    select {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-sizing: border-box; /* Ensure padding is included in width */
    }

    input[type="submit"] {
        width: 100%;
        padding: 10px;
        border: none;
        border-radius: 5px;
        background-color: #007bff;
        color: #fff;
        cursor: pointer;
    }

        input[type="submit"]:hover {
            background-color: #0056b3;
        }

    /* Increase size of latitude and longitude fields */
    #latitude, #longitude {
        width: calc(100% - 22px); /* Adjust width to fit within container */
        padding: 10px;
    }
</style>

    <div class="container">
        <h1 class="text-center">Weather App</h1>
        <form asp-controller="Home" asp-action="GetWeatherDetails" method="post">
            <div class="form-group">
                <label for="latitude">Latitude:</label>
                <input type="text" name="Latitude" id="latitude" placeholder="Enter Latitude" required />
            </div>

            <div class="form-group">
                <label for="longitude">Longitude:</label>
                <input type="text" name="Longitude" id="longitude" placeholder="Enter Longitude" required />
            </div>

            <div class="form-group">
                <label for="forecast_days">Forecast Days:</label>
                <select name="Forecast_days" id="forecast_days" required>
                    <option value="">Select Forecast Days</option>
                    <!-- JavaScript loop to generate options -->
                    <script>
                        for (var i = 1; i <= 16; i++) {
                            document.write('<option value="' + i + '">' + i + ' Day' + (i > 1 ? 's' : '') + '</option>');
                        }
                    </script>
                </select>
            </div>

            <div class="form-group">
                <label for="past_days">Past Days:</label>
                <input type="number" name="Past_days" id="past_days" placeholder="Enter Past Days" required min="0" />
            </div>

            <div class="form-group">
                <label for="cardmod">Mod:</label>
                <input type="text" name="cardmod" id="cardmod" placeholder="Enter Mod" required />
            </div>

            <input type="submit" value="Submit" />
        </form>
    </div>
    
        @if (ViewData["ApiResponse"] != null)
        {
            <div class="text-center">
                <h4 class="display-4">Weather Details</h4>
                <div class="card">
                    <div class="card-header">
                        <div class="chart1">
                            <canvas id="myChart2"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>
            <script>
            var times = [];
            var temperatures = [];
            
            @{
                var resultMeteo = JsonConvert.DeserializeObject<Meteo>(ViewData["ApiResponse"] as string);
            }
            @foreach (var t in resultMeteo.hourly.time)
            {
                @:times.push("@t");
            }

            @foreach (var temp in resultMeteo.hourly.temperature_2m)
            {
                @:temperatures.push("@temp");
            }
              var formattedTimes = times.map(function (time) {
                   return time.split('T')[1]; 
               });
                var Chart2 = document.getElementById('myChart2').getContext('2d');
                var chart = new Chart(Chart2, {
                    type: 'line',
                    data: {
                        labels: formattedTimes,
                        datasets: [{
                        label: "Temperature (°C)",
                        fill: false,
                        lineTension: .4,
                        startAngle: 0,
                        data: temperatures,
                        backgroundColor: "transparent",
                        pointBorderColor: "#660066",
                        borderColor: '#660066',
                        borderWidth: 2,
                        showLine: true,
                        }]
                    },
                    options: {
                        title: {
                            display: true,
                            text: "Weather Details"
                        }
                    }
                });
            </script>
        }
        
 
